TITLE:: ScoreTimer
summary:: A timer for a Score.
categories:: Undocumented classes
related:: Classes/Score, Classes/CScore

DESCRIPTION::
ScoreTimer is a class that its instances act as a simple timer for a given Link::Classes/Score:: object.


CLASSMETHODS::

INSTANCEMETHODS::

EXAMPLES::

code::
// make a score
(
p = Pbind(
  \freq, Pfunc { 300.rrand(700) },
  \amp, 0.1,
  \pan, Pfunc { 0.3.rand2 },
  \dur, 0.1
);
)

~score = p.asScore(15.0.rrand(20.0));

// a timer for ~score
ScoreTimer(~score);

// or, better
// ~score.timer;

~score.sort;
~score.play;

~score.stop;

~score.play;
::

Works also with code::CScore::.
code::
(
~oscFunc = { |start = 0.0, dur = 60, grainDur = 0.04, dt = 0.04, amp = 0.06|
	 var group, synth, time, list = List[], server;

	 time = start;
	 server = Server.default;

	 group = Group.new(server);

	 list.add( 
	 	 [
	 	     start,
		     { group.newMsg(server, \addToHead) },
		     server
		 ]
	);

	while(
		{ time < dur }, 
			{
			 list.add( 
			    	  [
			  	  	time,
					{
						(synth = Synth.basicNew(\default, server))
						.newMsg(group, [\out, 0, \freq, 700.0.rrand(1000.0), \amp, amp, \dur, grainDur, \pan, 0.3.rand2], \addToHead)
					},
					server
				 ]
			);

			list.add(
				[
					time + grainDur,
					{ synth.releaseMsg },
					server
				]
			);

			time = dt.value + time;
			};
	);

	list.asArray
}
)

~score = CScore(~oscFunc.(0.1, 10, 0.02))
~score.sort;

~score.timer;

~score.play;
~score.stop;
::
